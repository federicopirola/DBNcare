% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbn_structure_learning.R
\name{StructureLearning.Network}
\alias{StructureLearning.Network}
\title{Structure Learning function for Dynamic Bayesian Networks}
\usage{
StructureLearning.Network(
  data,
  algorithm = "hc",
  algorithm.res = "pc.stable",
  algorithm.max = "hc",
  blacklist = NULL,
  whitelist = NULL,
  test = NULL,
  score = NULL,
  max.sx = NULL,
  ...
)
}
\arguments{
\item{data}{a data.frame to be given as an input the to structure learning algorithm}

\item{algorithm}{a character string, the label of the structure learning algorithm to be used (default is \code{hc})}

\item{algorithm.res}{a character string, the label of the structure learning algorithm to be used for the restriction phase of the hybrid algorithms (default is \code{pc.stable})}

\item{algorithm.max}{a character string, the label of the structure learning algorithm to be used for the maximization phase of the hybrid algorithms (default is \code{hc})}

\item{blacklist}{a matrix with columns 'from' and 'to' defining the set of arcs that are forbidden}

\item{whitelist}{a matrix with columns 'from' and 'to' defining the set of arcs that are fixed}

\item{test}{a character string, the label of the conditional independence test to be used in the algorithm test (default is \verb{Mutual Information} mi)}

\item{score}{a character string, the label of the scoring function to be used in the algorithm test (default is \verb{Bayesian Information Criterion} bic)}

\item{max.sx}{an integer, the maximum number of parents for each node (default is no limit)}

\item{...}{additional parameters of the scoring function and/or chosen test}
}
\value{
An object of class 'DBN', which is a DBN learned via 2-phase Restricted Maximization algorithm
}
\description{
Structure Learning function for Dynamic Bayesian Networks
}
\examples{
DBN <- generate_dbn_random_structure(c("A","B","C"), TRUE, 0.5)
DBN_fitted <- generate_dbn_nodes_distributions(DBN,c("A","B","C"), TRUE, 2)
data <- dbn_sampling(DBN_fitted, 2000, 5)
StructureLearning.Network(data, algorithm='h2pc',score='aic') 
}
