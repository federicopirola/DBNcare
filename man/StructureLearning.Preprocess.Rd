% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbn_structure_learning.R
\name{StructureLearning.Preprocess}
\alias{StructureLearning.Preprocess}
\title{Preprocessing function for Structure Learning algorithm. It scans for the consistency of structure learning parameters in Dynamic Bayesian Networks}
\usage{
StructureLearning.Preprocess(
  data,
  blacklist = NULL,
  whitelist = NULL,
  method = "constraint",
  test = "mi",
  score = "bic",
  max.sx = NULL
)
}
\arguments{
\item{data}{object of type data.frame to be given as an input to structure learning algorithm}

\item{blacklist}{matrix with 'from' and 'to' columns of forbidden edges in the Dynamic Bayesian Network (default is NULL)}

\item{whitelist}{matrix with 'from' and 'to' columns of fixed edges in the Dynamic Bayesian Network (default is NULL)}

\item{method}{a string defining the structure learning method class, possible values are 'constraint' (default), 'score' and 'hybrid'}

\item{test}{a string defining the test for constraint based or hybrid algorithm (default is \verb{Mutual Information} mi)}

\item{score}{a string defining the score for score based or hybrid algorithm (default is \verb{Bayesian Information Criterion} bic )}

\item{max.sx}{maximum number of parent per node (default is no limit)}
}
\value{
character vector made of ordered data to fit G_0, data to fit G_transition, blacklist to fit G_0, blacklist to fit G_transition, whitelist to fit G_0, whitelist to fit G_transition
}
\description{
Preprocessing function for Structure Learning algorithm. It scans for the consistency of structure learning parameters in Dynamic Bayesian Networks
}
\examples{
DBN <- generate_dbn_random_structure(c("A","B","C"), TRUE, 0.5)
DBN_fitted <- generate_dbn_nodes_distributions(DBN,c("A","B","C"), TRUE, 2)
data <- dbn_sampling(DBN_fitted, 2000, 5)
StructureLearning.Preprocess(data)
}
